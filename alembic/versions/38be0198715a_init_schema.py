"""init schema

Revision ID: 38be0198715a
Revises: b028a0e3366a
Create Date: 2025-10-18 19:20:22.821149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '38be0198715a'
down_revision: Union[str, Sequence[str], None] = 'b028a0e3366a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('sex', sa.Text(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='public'
    )
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=14, scale=2), server_default=sa.text('0'), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('opened_at', sa.Date(), nullable=True),
    sa.Column('ends_at', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('balance >= 0', name='ck_accounts_balance_nonneg'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_accounts_user_currency', 'accounts', ['user_id', 'currency'], unique=False, schema='public')
    op.create_index('ix_accounts_user_id', 'accounts', ['user_id'], unique=False, schema='public')
    op.create_table('tg_users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('username', sa.Text(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('language_code', sa.Text(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('extra', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('telegram_id'),
    sa.UniqueConstraint('user_id', name='uq_tg_users_user_id_unique'),
    schema='public'
    )
    op.create_index('ix_tg_users_user_id', 'tg_users', ['user_id'], unique=False, schema='public')
    op.create_table('financial_goals',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('target_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('current_amount', sa.Numeric(precision=14, scale=2), server_default=sa.text('0'), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('priority', sa.Text(), nullable=True),
    sa.CheckConstraint('current_amount >= 0', name='ck_goals_current_nonneg'),
    sa.CheckConstraint('target_amount >= 0', name='ck_goals_target_nonneg'),
    sa.ForeignKeyConstraint(['account_id'], ['public.accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_goals_account_id', 'financial_goals', ['account_id'], unique=False, schema='public')
    op.create_index('ix_goals_user_id', 'financial_goals', ['user_id'], unique=False, schema='public')
    op.create_table('loans',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('loan_type', sa.Text(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('issued_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('n_months', sa.Integer(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('amount >= 0', name='ck_loans_amount_nonneg'),
    sa.ForeignKeyConstraint(['account_id'], ['public.accounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_loans_account_id', 'loans', ['account_id'], unique=False, schema='public')
    op.create_index('ix_loans_user_id', 'loans', ['user_id'], unique=False, schema='public')
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('from_account_id', sa.UUID(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('category', sa.Text(), nullable=True),
    sa.Column('receiver', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('amount >= 0', name='ck_tx_amount_nonneg'),
    sa.ForeignKeyConstraint(['from_account_id'], ['public.accounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('ix_transactions_from_account_id', 'transactions', ['from_account_id'], unique=False, schema='public')
    op.create_index('ix_transactions_user_datetime', 'transactions', ['user_id', 'datetime'], unique=False, schema='public')
    op.create_index('ix_transactions_user_id', 'transactions', ['user_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.drop_index('ix_transactions_user_id', table_name='transactions', schema='public')
    op.drop_index('ix_transactions_user_datetime', table_name='transactions', schema='public')
    op.drop_index('ix_transactions_from_account_id', table_name='transactions', schema='public')
    op.drop_table('transactions', schema='public')
    op.drop_index('ix_loans_user_id', table_name='loans', schema='public')
    op.drop_index('ix_loans_account_id', table_name='loans', schema='public')
    op.drop_table('loans', schema='public')
    op.drop_index('ix_goals_user_id', table_name='financial_goals', schema='public')
    op.drop_index('ix_goals_account_id', table_name='financial_goals', schema='public')
    op.drop_table('financial_goals', schema='public')
    op.drop_index('ix_tg_users_user_id', table_name='tg_users', schema='public')
    op.drop_table('tg_users', schema='public')
    op.drop_index('ix_accounts_user_id', table_name='accounts', schema='public')
    op.drop_index('ix_accounts_user_currency', table_name='accounts', schema='public')
    op.drop_table('accounts', schema='public')
    op.drop_table('users', schema='public')
    # ### end Alembic commands ###
